---
title: "Individual dataset processing"
author: "Ricardo Martins-Ferreira"
date: "2023-06-28"
output: html_document
---

# Example for the Grubman et al. 2019 (PMID: 31768052)

```{r upload packages, echo=TRUE}
libs <- c("Seurat", "tidyverse", "stringr", "data.table", "readxl")
suppressMessages(
  suppressWarnings(sapply(libs, require, character.only = TRUE))
)
```


The data consists of snRNA-seq from autopsied entorhinal cortex from patients with Alzheirme's Disease and controls.

It is available at NCBI's Gene Expression Omnibus database under the accession code GSE138852.

The input data consists of a processed count matrix 13,214 nuclei and 10,850 genes.


## Create Seurat object from count matrix

```{r create Seurat object, , echo=TRUE}

# upload count matrix
count.matrix <- read.csv("~/windows_ricardo/Desktop/rstudio_data/HuMicA/Public_datasets/Grubman_2019/Input/GSE138852_counts.csv", row.names = 1)

# Create Seurat object acounting for genes present in at least 3 nuclei.
Seurat = CreateSeuratObject(counts =count.matrix, min.cells=3)

```


## Filter low quality nuclei

Remove nuclei with the following features:

-   Feature count lower than 200 and higher than 5000;
-   UMI count lower than 500 and higher than 20000;
-   Percentage of mithocondrial genes higher than 20%;
-   Percentage of ribosomal genes higher than 5%.

```{r filter, echo=TRUE}

# Calculate percentage of ribosomal genes
C<-GetAssayData(object = Seurat, slot = "counts")
rb.genes <- rownames(Seurat)[grep("^RP[SL]",rownames(Seurat))]
percent.ribo <- colSums(C[rb.genes,])/Matrix::colSums(C)*100
Seurat <- AddMetaData(Seurat, percent.ribo, col.name = "percent.ribo")

# Calculate percentage of ribosomal genes
Seurat[["percent.mt"]] <- PercentageFeatureSet(Seurat, pattern = "^MT-")


# Filter low quality nuclei
Seurat <- subset(Seurat, subset = nFeature_RNA > 200 & nFeature_RNA < 5000  & nCount_RNA > 500 & 
                    nCount_RNA < 20000 & percent.mt < 10 & percent.ribo < 5)

Seurat

#check mean genes per nuclei
mean(Seurat@meta.data$nFeature_RNA)
```

A Seurat object with 11,440 nuclei, 10,850 genes and approximately 757 genes per nuclei.


```{r Quality control plots, echo=TRUE, fig.height=5, fig.width=10, fig.pos="centre"}

# Visualize QC metrics as a violin plot
print(VlnPlot(Seurat, features = c("nFeature_RNA", "nCount_RNA", "percent.mt","percent.ribo"), ncol = 4))

#FeatureScatter is typically used to visualize feature-feature relationships
plot1 = FeatureScatter(Seurat, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 = FeatureScatter(Seurat, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")

print(plot1 + plot2)

```
